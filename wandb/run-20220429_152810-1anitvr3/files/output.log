YOLOv5 temporarily requires wandb version 0.12.10 or below. Some features may not work as expected.
Overriding model.yaml nc=80 with nc=52
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1    153729  models.yolo.Detect                      [52, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model summary: 270 layers, 7159873 parameters, 7159873 gradients, 16.3 GFLOPs
Transferred 343/349 items from yolov5s.pt
Scaled weight_decay = 0.0005
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight (no decay), 60 weight, 60 bias
[34m[1mtrain: [39m[22mScanning '/home/jcambier/blackjack-card-counter/cards/train/labels.cache' images and labels... 14000 found, 0 m
















[34m[1mtrain: [39m[22mCaching images (7.3GB ram): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 14000/14000 [00:32<00:00, 434.59it/s]
[34m[1mval: [39m[22mScanning '/home/jcambier/blackjack-card-counter/cards/valid/labels.cache' images and labels... 4000 found, 0 miss




[34m[1mval: [39m[22mCaching images (2.1GB ram): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4000/4000 [00:08<00:00, 454.31it/s]
Plotting labels to runs/train/exp5/labels.jpg...
[34m[1mAutoAnchor: [39m[22m5.30 anchors/target, 1.000 Best Possible Recall (BPR). Current anchors are a good fit to dataset âœ…
Image sizes 416 train, 416 val
Using 2 dataloader workers
Logging results to [1mruns/train/exp5
Starting training for 120 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
  0%|          | 0/875 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/train.py", line 668, in <module>
    main(opt)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/train.py", line 563, in main
    train(opt.hyp, opt, device, callbacks)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/train.py", line 349, in train
    pred = model(imgs)  # forward
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/models/yolo.py", line 135, in forward
    return self._forward_once(x, profile, visualize)  # single-scale inference, train
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/models/yolo.py", line 158, in _forward_once
    x = m(x)  # run
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/models/common.py", line 139, in forward
    return self.cv3(torch.cat((self.m(self.cv1(x)), self.cv2(x)), 1))
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/models/common.py", line 105, in forward
    return x + self.cv2(self.cv1(x)) if self.add else self.cv2(self.cv1(x))
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/ifs/CS/replicated/home/jcambier/blackjack-card-counter/yolov5/models/common.py", line 47, in forward
    return self.act(self.bn(self.conv(x)))
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/modules/activation.py", line 394, in forward
    return F.silu(input, inplace=self.inplace)
  File "/home/jcambier/.local/lib/python3.9/site-packages/torch/nn/functional.py", line 2031, in silu
    return torch._C._nn.silu_(input)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 1.95 GiB total capacity; 1.01 GiB already allocated; 24.69 MiB free; 1.05 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF